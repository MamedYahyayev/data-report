- Rename KeyValueDataNode ==> KeyValueNode
- Create helper methods inside HtmlElement class to get other parameters of html element
e.g.

<a href="https://www.example.com"></a>
<div data-test="title"></div>

In above case, we might want to get href attribute or data-test attribute value. Provide a way to define them in API


- UI is blocking when a project is shared (1 or 2 seconds)

- Parallel scraping Feature:
    - Create a Task class which will be split and shared between clients. Each client is responsible for his own part.
    class Task:
        id: String
        name: String
        template: ScrapeTemplate
        assignee: Client
        status: TaskStatus (enum) (ASSIGNED, DRAFT, DELETED, CANCELLED, COMPLETED, UNCOMPLETED)
        description: The reason or explanation of the task status. e.g. Task #12 is cancelled because of
            internet connectivity or task #12 is finished successfully at 22.03.2024 13:34:45.
    Hint: in the future, the Task class can carry other parameters e.g. TaskDetails.

    - Splittable interface. The interface will be implemented by every template that can be split into multiple parts.
        Here's the blueprint of the Splittable interface:
     interface Splittable {
        List<Task> split(String taskName, Collection<Client> clients);
     }

    - Create a class which is responsible to share tasks between Clients. e.g. TaskManager
    class TaskManager
        The class will send receive list of tasks and iterate over them and send them to appropriate Clients. The class
        will log the details of each operation. For instance:
        Task #12 for 'turbo.az scraping' project sent to Mammad Yahyayev (mammadyahyayev@gmail.com or ip address)


- Kill application on 9090 port after terminating program (Research awaitTermination).

- Create a Web App for UI to manage all the tasks, configurations, clients connections and so on.
There will be listeners, notifications for clients to manage app better way. This way we can easily create UI by using
some of the powerful libraries in frontend.

- Make it possible for templates to be divided for only one client, in order to execute them with Threads internally.

- Add Human interaction Node where application will wait indefinitely until human clicking a button called Continue.
This is useful for websites that you want to populate passwords, some credentials or simplify process of scraping
(Example on Amazon, there was security concerns that you have to provide recaptcha). In these cases, notification
pop up will be appeared on Web App UI to tell the Client Human Interaction required...

- Problem: Either collecting data or exporting to CSV slipped column names and values

- Handle NoSuchElementException of Selenium differently. Because it prints huge exception message.

- Add tryCount or timeout for elements on UI maybe element will be loaded lately. TimeOut can be described as Node to
put it between other nodes.

- Add actions as Node, those will be executed in order. For instance scrape data, then click the dropdown menu button
in this case there will be Action node which accepts selectors, action object (mouse click, hover) and so on.

- Create Node flow that will be executed in order.

- Design Configuration file which is specific to AZScrape.

- [UPCOMING] Create an enum for shared flag arguments between clients and server.
Example:
FLAG_PROJECT(flag_short, flag_long)
FLAG_SERVER_PORT(flag_short, null)

- [UPCOMING] The Server has to check the existence of the given project, if the project doesn't exist, then it must
throw exception.

- [UPCOMING] Create a side panel for showing logs to the Coordinator client.
Example:
[22-04-2024T13:34:15] jack joined to 'hospital' project
[22-04-2024T13:44:28] jack-task#12 assigned to jack
[22-04-2024T13:56:32] jack completed jack-task#12 in 5:04 minutes


AZScrape Logo Ideas

Scrape keywords pulling AZ letters and those letters will be seen as distorted.
